{"mappings":"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","sources":["src/scripts/success.js"],"sourcesContent":["// Easy to add new success stories - just add objects to this array\r\nconst successStories = [\r\n    {\r\n        name: \"Ms. Kavya Vijayakumar C\",\r\n        company: \"Government College of Technology, Coimbatore\",\r\n        role: \"Atena\",\r\n        initials: \"KV\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/gct-logo.png\" // Add company logo here\r\n    },\r\n    {\r\n        name: \"Mohamed Sharith\",\r\n        company: \"Muthayir\",\r\n        role: \"Jr. Design Engineer\",\r\n        initials: \"MS\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/muthayir-logo.png\" // Add company logo here\r\n    },\r\n    {\r\n        name: \"Kavya Vijayakumar C\",\r\n        company: \"Atena\",\r\n        role: \"Verification Engineer\",\r\n        initials: \"KV\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/atena-logo.png\" // Add company logo here\r\n    },\r\n    {\r\n        name: \"Miruthala E\",\r\n        company: \"HCL Technologies\",\r\n        role: \"Systems Engineer\",\r\n        initials: \"ME\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/hcl-logo.png\" // Add company logo here\r\n    },\r\n    {\r\n        name: \"Macklin Eriya C\",\r\n        company: \"HCL Technologies\",\r\n        role: \"Software Engineer\",\r\n        initials: \"MC\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/hcl-logo.png\" // Add company logo here\r\n    },\r\n    {\r\n        name: \"Kiran K\",\r\n        company: \"HCL Technologies\",\r\n        role: \"Technical Specialist\",\r\n        initials: \"KK\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/hcl-logo.png\" // Add company logo here\r\n    },\r\n    {\r\n        name: \"Karthikeyan K\",\r\n        company: \"HCL Technologies\",\r\n        role: \"Project Engineer\",\r\n        initials: \"KA\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/hcl-logo.png\" // Add company logo here\r\n    },\r\n    {\r\n        name: \"Surendhar G\",\r\n        company: \"HCL Technologies\",\r\n        role: \"Senior Analyst\",\r\n        initials: \"SG\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/hcl-logo.png\" // Add company logo here\r\n    },\r\n    {\r\n        name: \"Vignesh D\",\r\n        company: \"HCL Robotics\",\r\n        role: \"Robotics Engineer\",\r\n        initials: \"VD\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/hcl-robotics-logo.png\" // Add company logo here\r\n    },\r\n    // Add more success stories here - just copy the format above\r\n    {\r\n        name: \"Priya Sharma\",\r\n        company: \"Tech Solutions Inc\",\r\n        role: \"Full Stack Developer\",\r\n        initials: \"PS\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/tech-solutions-logo.png\" // Add company logo here\r\n    },\r\n    {\r\n        name: \"Rahul Patel\",\r\n        company: \"Innovation Labs\",\r\n        role: \"Data Scientist\",\r\n        initials: \"RP\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/innovation-labs-logo.png\" // Add company logo here\r\n    },\r\n    {\r\n        name: \"Sneha Reddy\",\r\n        company: \"Digital Dynamics\",\r\n        role: \"UI/UX Designer\",\r\n        initials: \"SR\",\r\n        // avatar: \"path/to/profile.jpg\", // Add profile image here\r\n        // companyLogo: \"path/to/digital-dynamics-logo.png\" // Add company logo here\r\n    }\r\n];\r\n\r\n/**\r\n * Creates an employee card element\r\n * @param {Object} person - Employee data object\r\n * @returns {HTMLElement} - Complete employee card element\r\n */\r\nfunction createEmployeeCard(person) {\r\n    // Create main card container\r\n    const card = document.createElement('div');\r\n    card.className = 'employee-card';\r\n    card.setAttribute('data-employee', person.name);\r\n\r\n    // Create profile section\r\n    const profileSection = document.createElement('div');\r\n    profileSection.className = 'profile-section';\r\n\r\n    // Handle profile image or placeholder\r\n    if (person.avatar) {\r\n        const profileImg = document.createElement('img');\r\n        profileImg.src = person.avatar;\r\n        profileImg.alt = person.name;\r\n        profileImg.className = 'profile-image';\r\n        \r\n        // Handle image load errors\r\n        profileImg.onerror = function() {\r\n            console.warn(`Failed to load profile image for ${person.name}: ${person.avatar}`);\r\n            const placeholder = createProfilePlaceholder(person.initials);\r\n            this.parentNode.replaceChild(placeholder, this);\r\n        };\r\n        \r\n        profileSection.appendChild(profileImg);\r\n    } else {\r\n        const placeholder = createProfilePlaceholder(person.initials);\r\n        profileSection.appendChild(placeholder);\r\n    }\r\n\r\n    // Create employee information elements\r\n    const name = document.createElement('h3');\r\n    name.className = 'employee-name';\r\n    name.textContent = person.name;\r\n\r\n    const company = document.createElement('p');\r\n    company.className = 'employee-company';\r\n    company.textContent = person.company;\r\n\r\n    const role = document.createElement('p');\r\n    role.className = 'employee-role';\r\n    role.textContent = person.role;\r\n\r\n    // Create company logo section\r\n    const logoSection = document.createElement('div');\r\n    logoSection.className = 'logo-section';\r\n\r\n    // Handle company logo or placeholder\r\n    if (person.companyLogo) {\r\n        const logoImg = document.createElement('img');\r\n        logoImg.src = person.companyLogo;\r\n        logoImg.alt = `${person.company} logo`;\r\n        logoImg.className = 'company-logo';\r\n        \r\n        // Handle logo load errors\r\n        logoImg.onerror = function() {\r\n            console.warn(`Failed to load company logo for ${person.company}: ${person.companyLogo}`);\r\n            const placeholder = createLogoPlaceholder();\r\n            this.parentNode.replaceChild(placeholder, this);\r\n        };\r\n        \r\n        logoSection.appendChild(logoImg);\r\n    } else {\r\n        const placeholder = createLogoPlaceholder();\r\n        logoSection.appendChild(placeholder);\r\n    }\r\n\r\n    // Assemble the complete card\r\n    card.appendChild(profileSection);\r\n    card.appendChild(name);\r\n    card.appendChild(company);\r\n    card.appendChild(role);\r\n    card.appendChild(logoSection);\r\n\r\n    return card;\r\n}\r\n\r\n/**\r\n * Creates a profile placeholder element\r\n * @param {string} initials - Employee initials\r\n * @returns {HTMLElement} - Profile placeholder element\r\n */\r\nfunction createProfilePlaceholder(initials) {\r\n    const placeholder = document.createElement('div');\r\n    placeholder.className = 'profile-placeholder';\r\n    placeholder.textContent = initials;\r\n    placeholder.setAttribute('title', 'Profile photo not available');\r\n    return placeholder;\r\n}\r\n\r\n/**\r\n * Creates a logo placeholder element\r\n * @returns {HTMLElement} - Logo placeholder element\r\n */\r\nfunction createLogoPlaceholder() {\r\n    const placeholder = document.createElement('div');\r\n    placeholder.className = 'logo-placeholder';\r\n    placeholder.textContent = 'Logo';\r\n    placeholder.setAttribute('title', 'Company logo not available');\r\n    return placeholder;\r\n}\r\n\r\n/**\r\n * Renders all employee cards to the grid\r\n * @param {Array} employees - Array of employee objects\r\n */\r\nfunction renderEmployees(employees = successStories) {\r\n    const grid = document.getElementById('employeeGrid');\r\n    \r\n    if (!grid) {\r\n        console.error('Employee grid container not found');\r\n        return;\r\n    }\r\n\r\n    // Clear existing content\r\n    grid.innerHTML = '';\r\n\r\n    // Handle empty state\r\n    if (!employees || employees.length === 0) {\r\n        const emptyState = document.createElement('div');\r\n        emptyState.className = 'error';\r\n        emptyState.textContent = 'No employees to display';\r\n        grid.appendChild(emptyState);\r\n        return;\r\n    }\r\n\r\n    // Create and append employee cards\r\n    employees.forEach((person, index) => {\r\n        try {\r\n            const card = createEmployeeCard(person);\r\n            card.setAttribute('data-index', index);\r\n            grid.appendChild(card);\r\n        } catch (error) {\r\n            console.error(`Error creating card for employee ${person.name}:`, error);\r\n        }\r\n    });\r\n\r\n    console.log(`Rendered ${employees.length} employee cards`);\r\n}\r\n\r\n/**\r\n * Adds a new employee to the grid\r\n * @param {Object} employee - Employee object to add\r\n */\r\nfunction addEmployee(employee) {\r\n    // Validate required fields\r\n    if (!employee.name || !employee.company || !employee.role || !employee.initials) {\r\n        console.error('Employee must have name, company, role, and initials');\r\n        return false;\r\n    }\r\n\r\n    successStories.push(employee);\r\n    renderEmployees();\r\n    console.log(`Added new employee: ${employee.name}`);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Removes an employee by index\r\n * @param {number} index - Index of employee to remove\r\n */\r\nfunction removeEmployee(index) {\r\n    if (index >= 0 && index < successStories.length) {\r\n        const removed = successStories.splice(index, 1)[0];\r\n        renderEmployees();\r\n        console.log(`Removed employee: ${removed.name}`);\r\n        return true;\r\n    }\r\n    console.error('Invalid employee index');\r\n    return false;\r\n}\r\n\r\n/**\r\n * Filters employees by search term\r\n * @param {string} searchTerm - Term to search for\r\n */\r\nfunction searchEmployees(searchTerm) {\r\n    if (!searchTerm) {\r\n        renderEmployees();\r\n        return;\r\n    }\r\n\r\n    const filtered = successStories.filter(person => \r\n        person.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        person.company.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        person.role.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    renderEmployees(filtered);\r\n    console.log(`Found ${filtered.length} employees matching \"${searchTerm}\"`);\r\n}\r\n\r\n/**\r\n * Initialize the application\r\n */\r\nfunction init() {\r\n    try {\r\n        renderEmployees();\r\n        console.log('Employee grid initialized successfully');\r\n    } catch (error) {\r\n        console.error('Failed to initialize employee grid:', error);\r\n        \r\n        // Show error state\r\n        const grid = document.getElementById('employeeGrid');\r\n        if (grid) {\r\n            grid.innerHTML = '<div class=\"error\">Failed to load employees</div>';\r\n        }\r\n    }\r\n}\r\n\r\n// Wait for DOM to be fully loaded before initializing\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', init);\r\n} else {\r\n    init();\r\n}\r\n\r\n// Export functions for external use (if needed)\r\nwindow.EmployeeGrid = {\r\n    addEmployee,\r\n    removeEmployee,\r\n    searchEmployees,\r\n    renderEmployees,\r\n    data: successStories\r\n};\r\n\r\n// Example usage (uncomment to test):\r\n/*\r\n// Add a new employee\r\naddEmployee({\r\n    name: \"New Employee\",\r\n    company: \"New Company\",\r\n    role: \"New Role\",\r\n    initials: \"NE\",\r\n    avatar: \"path/to/image.jpg\",\r\n    companyLogo: \"path/to/logo.png\"\r\n});\r\n\r\n// Search employees\r\nsearchEmployees(\"HCL\");\r\n\r\n// Remove an employee by index\r\nremoveEmployee(0);\r\n*/"],"names":[],"version":3,"file":"placement.93460a30.js.map","sourceRoot":"/__parcel_source_root/"}